{"version":3,"sources":["components/inputs/inputs.jsx","components/excel/excel.jsx","App.js","index.js"],"names":["Input","props","useEffect","array","i","input_info","input_year","push","onLineChanged","className","type","onChange","event","onYearChanged","target","value","onPreMoneyChanged","onSavingChanged","onReturnChanged","onDividendChanged","Excel","premoney","parseInt","inputData","input_premoney","saving","input_saving","savingYear","year","returnyGen","input_return","returnyResult1","returnyResult2","dividend","input_dividend","dividendResult1","dividendResult2","result","index","input_lines","map","e","console","log","Math","round","App","state","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c3ff125.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nimport './inputs.css'\r\n\r\n\r\nconst Input = (props) => {\r\n\r\n\r\n    \r\n    const premoneyChanged = (event) => {\r\n        props.onPreMoneyChanged(event.target.value)\r\n    }\r\n    const yearChanged = (event) => {\r\n        props.onYearChanged(event.target.value)\r\n    }\r\n    const savingChanged = (event) => {\r\n        props.onSavingChanged(event.target.value)\r\n     }\r\n     const returnChanged = (event) => {\r\n        props.onReturnChanged((event.target.value/100)+1)\r\n     }\r\n     const dividendChanged = (event) => {\r\n        props.onDividendChanged((event.target.value/100)+1)\r\n     }\r\n\r\n     useEffect( () => {\r\n        const array = []\r\n        for ( var i = 0; i < props.input_info.input_year; i++) {\r\n               array.push(i+1)\r\n               \r\n            }\r\n\r\n            props.onLineChanged(array)\r\n     },[props.input_info.input_year])\r\n     \r\n    return (\r\n        <div className=\"input_container\">\r\n                <div className=\"input_grid\">\r\n                    <div className=\"input_container\">\r\n                        <p className=\"simple-text\">Tidsperiod(år)</p>\r\n                        <div className=\"input_combo\">\r\n                        <input className=\"input_number\" type=\"number\" onChange={yearChanged} />\r\n                        <h3 className=\"side-text\">år</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input_container\">\r\n                        <p className=\"simple-text\">Startkapital(SEK)</p>\r\n                        <div className=\"input_combo\">\r\n                        <input className=\"input_kronor\" type=\"number\" onChange={premoneyChanged} />\r\n                        <h3 className=\"side-text\">kr</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input_container\">\r\n                        <p className=\"simple-text\">Sparande(SEK/mån)</p>\r\n                        <div className=\"input_combo\">\r\n                        <input className=\"input_kronor\" type=\"number\" onChange={savingChanged} />\r\n                        <h3 className=\"side-text\">kr</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input_container\">\r\n                        <p className=\"simple-text\">Avkastning(%)</p>\r\n                        <div className=\"input_combo\">\r\n                        <input className=\"input_number\" type=\"number\" onChange={returnChanged} />\r\n                        <h3 className=\"side-text\">%</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input_container\">\r\n                        <p className=\"simple-text\">ev. Utdelning(%)</p>\r\n                        <div className=\"input_combo\">\r\n                        <input className=\"input_number\" type=\"number\" onChange={dividendChanged} />\r\n                        <h3 className=\"side-text\">%</h3>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                </div>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Input;","import React from 'react';\r\n\r\nimport './excel.css'\r\n\r\nconst Excel = (props) => {\r\n    \r\n    let premoney = parseInt(props.inputData.input_premoney);\r\n    let saving = props.inputData.input_saving;\r\n    let savingYear=0;\r\n    let year = 2021;\r\n    let returnyGen = props.inputData.input_return;\r\n    let returnyResult1 = 0;\r\n    let returnyResult2 = 0;\r\n    let dividend = props.inputData.input_dividend;\r\n    let dividendResult1 = 0;\r\n    let dividendResult2 = 0;\r\n    let result = 0;\r\n    let index = 0;\r\n\r\n    return (\r\n        <div>\r\n        <table className=\"content-table\">\r\n            <thead>\r\n                <tr>\r\n                    \r\n                    <th>År</th>\r\n                    <th>Insättning totalt(SEK)</th>\r\n                    <th>Aktietillväxt(SEK)</th>\r\n                    <th>Utdelning(SEK)</th>\r\n                    <th>Resultat(SEK)</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>    \r\n                {props.inputData.input_lines.map( (e, i) => {\r\n                    index = i;\r\n                    year= year + 1\r\n                    if(i < 1) {\r\n                        savingYear = ((premoney+savingYear)+(12*saving));\r\n                    } else savingYear = (savingYear+(12*saving));\r\n                    console.log(savingYear)\r\n\r\n                    if (returnyGen>0){\r\n                            returnyResult1 = (returnyResult2+savingYear*returnyGen)-savingYear;\r\n                            returnyResult2 = savingYear*returnyGen-savingYear;\r\n                    }\r\n                    if ( dividend > 0) {\r\n                        dividendResult1 = (dividendResult2+returnyResult1*dividend)-returnyResult1\r\n                        \r\n                        dividendResult2 = (returnyResult1*dividend)-returnyResult1\r\n                        console.log(dividendResult2)\r\n                    }\r\n                    savingYear = savingYear + dividendResult1 + returnyResult1\r\n\r\n                    result = savingYear+returnyResult1+dividendResult1\r\n                   \r\n                    \r\n \r\n                    \r\n                    return (\r\n                        \r\n                        <tr className=\"line-class\">\r\n                            <td>{year}</td>\r\n                            <td>{Math.round(savingYear)}</td>\r\n                            <td>{Math.round(returnyResult1)}</td>\r\n                            <td>{Math.round(dividendResult1)}</td>\r\n                            <td>{Math.round(result)}</td>\r\n                        </tr>\r\n                       \r\n                    )\r\n\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        <div className=\"result_container\">\r\n        <h2 className=\"result_h2\">Grattis din portfölj är värderad &nbsp;</h2> <h1 className=\"result_h1\">{Math.round(result)} kr&nbsp;</h1> <h2 className=\"result_h2\"> &nbsp;om&nbsp; </h2><h1 className=\"result_h1\">{index+1}</h1><h2 className=\"result_h2\">&nbsp;år! </h2>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Excel;","import React from 'react';\n\nimport Input from './components/inputs/inputs'\nimport Statistic from './components/statistic/statistic'\nimport Excel from './components/excel/excel'\nimport Result from './components/result/result'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n  super(props);\n  \n    this.state = {\n      input_lines: [],\n      input_premoney: 0,\n      input_year: 0,\n      input_saving: 0,\n      input_return: 0,\n      input_dividend: 0\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Input onPreMoneyChanged={value => this.setState({input_premoney: value})} onLineChanged={value => this.setState({input_lines: value})} onYearChanged={value => this.setState({input_year: value})} onSavingChanged={value => this.setState({input_saving: value})} \n        onReturnChanged={value => this.setState({input_return: value})} onDividendChanged={value => this.setState({input_dividend: value})}input_info={this.state} />\n        <Excel inputData={this.state} />\n        \n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}