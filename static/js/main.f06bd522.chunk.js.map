{"version":3,"sources":["components/inputs/inputs.jsx","components/excel/excel.jsx","App.js","index.js"],"names":["Input","props","useEffect","array","i","input_info","input_year","push","onLineChanged","className","type","onChange","event","onYearChanged","target","value","onSavingChanged","onReturnChanged","onDividendChanged","Excel","saving","inputData","input_saving","savingYear","year","returnyGen","input_return","returnyResult1","returnyResult2","dividend","input_dividend","dividendResult1","dividendResult2","result","index","input_lines","map","e","console","log","Math","round","App","state","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f06bd522.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nimport './inputs.css'\r\n\r\n\r\nconst Input = (props) => {\r\n\r\n\r\n    \r\n\r\n    const yearChanged = (event) => {\r\n        props.onYearChanged(event.target.value)\r\n    }\r\n    const savingChanged = (event) => {\r\n        props.onSavingChanged(event.target.value)\r\n     }\r\n     const returnChanged = (event) => {\r\n        props.onReturnChanged((event.target.value/100)+1)\r\n     }\r\n     const dividendChanged = (event) => {\r\n        props.onDividendChanged((event.target.value/100)+1)\r\n     }\r\n\r\n     useEffect( () => {\r\n        const array = []\r\n        for ( var i = 0; i < props.input_info.input_year; i++) {\r\n               array.push(i+1)\r\n               \r\n            }\r\n\r\n            props.onLineChanged(array)\r\n     },[props.input_info.input_year])\r\n     \r\n    return (\r\n        <div className=\"input_container\">\r\n                <div className=\"input_grid\">\r\n                    <div className=\"input_container\">\r\n                        <p className=\"simple-text\">Tidsperiod(år)</p>\r\n                        <div className=\"input_combo\">\r\n                        <input className=\"input_number\" type=\"number\" onChange={yearChanged} />\r\n                        <h3 className=\"side-text\">år</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input_container\">\r\n                        <p className=\"simple-text\">Sparande(SEK/mån)</p>\r\n                        <div className=\"input_combo\">\r\n                        <input className=\"input_kronor\" type=\"number\" onChange={savingChanged} />\r\n                        <h3 className=\"side-text\">kr</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input_container\">\r\n                        <p className=\"simple-text\">Avkastning(%)</p>\r\n                        <div className=\"input_combo\">\r\n                        <input className=\"input_number\" type=\"number\" onChange={returnChanged} />\r\n                        <h3 className=\"side-text\">%</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input_container\">\r\n                        <p className=\"simple-text\">ev. Utdelning(%)</p>\r\n                        <div className=\"input_combo\">\r\n                        <input className=\"input_number\" type=\"number\" onChange={dividendChanged} />\r\n                        <h3 className=\"side-text\">%</h3>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                </div>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Input;","import React from 'react';\r\n\r\nimport './excel.css'\r\n\r\nconst Excel = (props) => {\r\n    \r\n    let saving = props.inputData.input_saving;\r\n    let savingYear=0;\r\n    let year = 2021;\r\n    let returnyGen = props.inputData.input_return\r\n    let returnyResult1 = 0;\r\n    let returnyResult2 = 0;\r\n    let dividend = props.inputData.input_dividend;\r\n    let dividendResult1 = 0;\r\n    let dividendResult2 = 0;\r\n    let result = 0;\r\n    let index = 0\r\n\r\n    return (\r\n        <div>\r\n        <table className=\"content-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>År</th>\r\n                    <th>Insättning totalt(SEK)</th>\r\n                    <th>Aktietillväxt(SEK)</th>\r\n                    <th>Utdelning(SEK)</th>\r\n                    <th>Resultat(SEK)</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>    \r\n                {props.inputData.input_lines.map( (e, i) => {\r\n                    index = i;\r\n                    year= year + 1\r\n                    savingYear = (savingYear+12*saving);\r\n\r\n                    if (returnyGen>0){\r\n                            returnyResult1 = (returnyResult2+savingYear*returnyGen)-savingYear\r\n                            returnyResult2 = savingYear*returnyGen-savingYear   \r\n                    }\r\n                    if ( dividend > 0) {\r\n                        dividendResult1 = (dividendResult2+returnyResult1*dividend)-returnyResult1\r\n                        \r\n                        dividendResult2 = (returnyResult1*dividend)-returnyResult1\r\n                        console.log(dividendResult2)\r\n                    }\r\n                    savingYear = savingYear + dividendResult1 + returnyResult1\r\n\r\n                    result = savingYear+returnyResult1+dividendResult1\r\n                   \r\n                    \r\n \r\n                    \r\n                    return (\r\n                        \r\n                        <tr className=\"line-class\">\r\n                            <td>{year}</td>\r\n                            <td>{Math.round(savingYear)}</td>\r\n                            <td>{Math.round(returnyResult1)}</td>\r\n                            <td>{Math.round(dividendResult1)}</td>\r\n                            <td>{Math.round(result)}</td>\r\n                        </tr>\r\n                       \r\n                    )\r\n\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        <h1 className=\"Grattis\">Om du sparar {saving}kr/mån i {index+1} år med beräknad avkastning kommer din portfölj vara värd {Math.round(result)} kronor!</h1>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Excel;","import React from 'react';\n\nimport Input from './components/inputs/inputs'\nimport Statistic from './components/statistic/statistic'\nimport Excel from './components/excel/excel'\nimport Result from './components/result/result'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n  super(props);\n  \n    this.state = {\n      input_lines: [],\n      input_year: 0,\n      input_saving: 0,\n      input_return: 0,\n      input_dividend: 0\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Input onLineChanged={value => this.setState({input_lines: value})} onYearChanged={value => this.setState({input_year: value})} onSavingChanged={value => this.setState({input_saving: value})} \n        onReturnChanged={value => this.setState({input_return: value})} onDividendChanged={value => this.setState({input_dividend: value})}input_info={this.state} />\n        <Excel inputData={this.state} />\n        \n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}